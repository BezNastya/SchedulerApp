{
	"info": {
		"_postman_id": "6b15f3f4-ef63-4416-9092-8786799cef6a",
		"name": "SpringBootStudentController",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "GET_USERLIST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/students",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_USER_BY_ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", () => {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/students/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "POST_STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response json and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.lastName).to.be.a('string');\r",
									"    pm.expect(responseJson.firstName).to.be.a('string');\r",
									"    pm.expect(responseJson.id).to.have.lengthOf(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"firstName\"  : \"value\",  \r\n   \"lastName\"  : \"value\",  \r\n   \"password\"  : \"value\",\r\n   \"email\":\"bob@gmail.com\",\r\n   \"role\":\"User\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/students",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "PUT_STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data type of the response\", () => {\r",
									"  pm.expect(jsonData.newFaculty).to.be.a(\"string\");\r",
									"  pm.expect(jsonData.id).to.be.a(\"number\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/students/2?newFaculty=Fi",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students",
								"2"
							],
							"query": [
								{
									"key": "newFaculty",
									"value": "Fi"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "DELETE_STUDENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User creation was successful\", function () {\r",
									"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/students/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}