{
	"info": {
		"_postman_id": "cfadb1c0-d811-432e-bba1-43dedc9288fa",
		"name": "SpringBootProjectCourse",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"All courses can be get\", () => {\r",
							"      pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/courses",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get course at specific id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"First course is computing\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(1);\r",
							"  pm.expect(responseJson.name).to.eql(\"Computing\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/courses/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"courses",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get course at wrong id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Not found course\", () => {\r",
							"  pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/courses/-100",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"courses",
						"-100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add course test\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"NewCourse\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"NewCourse\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/courses",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update course name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update at existing id successful\", () => {\r",
							"      pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/courses/1?newName=updatedName",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"courses",
						"1"
					],
					"query": [
						{
							"key": "newName",
							"value": "updatedName"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete course with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete at existing id successful\", () => {\r",
							"      pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/courses/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"courses",
						"2"
					]
				}
			},
			"response": []
		}
	]
}